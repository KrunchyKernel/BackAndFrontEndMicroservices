[{"/home/dru/cloudfrontend/frontend/src/index.js":"1","/home/dru/cloudfrontend/frontend/src/App.js":"2","/home/dru/cloudfrontend/frontend/src/reportWebVitals.js":"3","/home/dru/cloudfrontend/frontend/src/components/AppBar.js":"4","/home/dru/cloudfrontend/frontend/src/components/LoginScreen.js":"5"},{"size":535,"mtime":1684642490509,"results":"6","hashOfConfig":"7"},{"size":739,"mtime":1684719617315,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1684642490509,"results":"9","hashOfConfig":"7"},{"size":3266,"mtime":1684724657532,"results":"10","hashOfConfig":"7"},{"size":2057,"mtime":1684706990185,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"o52yfx",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"/home/dru/cloudfrontend/frontend/src/index.js",[],[],[],"/home/dru/cloudfrontend/frontend/src/App.js",[],[],"/home/dru/cloudfrontend/frontend/src/reportWebVitals.js",[],[],"/home/dru/cloudfrontend/frontend/src/components/AppBar.js",["29"],[],"/home/dru/cloudfrontend/frontend/src/components/LoginScreen.js",["30"],[],"// import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState } from \"react\";\n\n\nconst LoginScreen = () => {\n\n    let [allFieldsCompleted, setAllFieldsCompleted] = useState(false);\n\n    let [ username, setUsername ]= useState(\"\"); //use state for these, on change{(e)=> setInput(e.target.value)} or some shit\n\n    let [ password, setPassword ] = useState(\"\");\n\n    const handleChange = (e) => {\n        if(e.target.id === \"username\") {\n            setUsername(e.target.value);\n        }\n        if (e.target.id === \"password\") {\n            setPassword(e.target.value);\n        }\n\n        if (username === \"test\" && password === \"test\") {\n            setAllFieldsCompleted(true)\n        }\n    }\n\n\n    return (\n        <>\n        <Box component=\"div\" sx={{alignContent: 'center', alignItems: \"center\",width: '75%', height: '100%', backgroundColor: '#595959'}}>\n            <Box component='div' sx={{borderWidth: '5px', borderColor: '#282c34', backgroundColor: '#FFFFFF', alignContent: 'center', alignItems: 'center'}}>\n        <Box\n          component=\"form\"\n          sx={{\n            justifyContent:'center', alignContent: 'center',alignItems: 'center', width: '50%', alignItems: 'center', margin: '20px', padding: '40px', backgroundColor: '#FFFFFF'\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n      <TextField value={username} sx={{alignSelf: 'center', margin: 'auto', width:'40%', display:'block'}} id=\"username\" label=\"username\" variant=\"outlined\" onChange={e => {handleChange(e)}} /><br/>    \n      <TextField value={password} sx={{alignSelf: 'center', margin: 'auto', width:'40%', display:'block'}} id=\"password\" label=\"password\" variant=\"outlined\" onChange={e => {handleChange(e)}} /> \n      <Button sx={{marginTop: \"30px\"}} disabled={allFieldsCompleted? false: true} variant=\"contained\">Log In</Button>\n        </Box>\n        </Box>\n        </Box>\n        </>\n\n      );\n}\n\nexport default LoginScreen;",{"ruleId":"31","severity":1,"message":"32","line":11,"column":8,"nodeType":"33","messageId":"34","endLine":11,"endColumn":14},{"ruleId":"35","severity":1,"message":"36","line":37,"column":97,"nodeType":"37","messageId":"38","endLine":37,"endColumn":107},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","no-dupe-keys","Duplicate key 'alignItems'.","ObjectExpression","unexpected"]