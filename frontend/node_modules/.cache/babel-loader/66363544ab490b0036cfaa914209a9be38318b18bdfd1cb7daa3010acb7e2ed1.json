{"ast":null,"code":"var _jsxFileName = \"/home/dru/cloudfrontend/frontend/src/components/LoginScreen.js\",\n  _s = $RefreshSig$();\n// import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  let {\n    allFieldsCompleted,\n    setAllFieldsCompleted\n  } = useState(false);\n  let {\n    username,\n    setUsername\n  } = useState(\"\"); //use state for these, on change{(e)=> setInput(e.target.value)} or some shit\n\n  let {\n    password,\n    setPassword\n  } = useState(\"\");\n  const handleChange = e => {\n    if (e.target.id === \"username\") {\n      setUsername(e.target.value);\n    }\n    if (e.target.id === \"password\") {\n      setPassword(e.target.value);\n    }\n    if (username !== \"\" && password !== \"\") {\n      setAllFieldsCompleted(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '100%',\n        height: '100%',\n        backgroundColor: '#000000'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        sx: {\n          width: '75%'\n        },\n        noValidate: true,\n        autoComplete: \"off\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          alignvalue: username,\n          id: \"username\",\n          label: \"username\",\n          variant: \"outlined\",\n          onChange: e => {\n            handleChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          value: password,\n          id: \"password\",\n          label: \"password\",\n          variant: \"outlined\",\n          onChange: e => {\n            handleChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: allFieldsCompleted ? false : true,\n          variant: \"contained\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(LoginScreen, \"E1w6Q/V1QX9KRerRxN6YR2+KvUg=\");\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["Box","TextField","Button","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginScreen","_s","allFieldsCompleted","setAllFieldsCompleted","username","setUsername","password","setPassword","handleChange","e","target","id","value","children","sx","width","height","backgroundColor","component","noValidate","autoComplete","alignvalue","label","variant","onChange","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/home/dru/cloudfrontend/frontend/src/components/LoginScreen.js"],"sourcesContent":["// import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { useState } from \"react\";\n\n\nconst LoginScreen = () => {\n\n    let {allFieldsCompleted, setAllFieldsCompleted} = useState(false);\n\n    let { username, setUsername }= useState(\"\"); //use state for these, on change{(e)=> setInput(e.target.value)} or some shit\n\n    let { password, setPassword } = useState(\"\");\n\n    const handleChange = (e) => {\n        if(e.target.id === \"username\") {\n            setUsername(e.target.value);\n        }\n        if (e.target.id === \"password\") {\n            setPassword(e.target.value);\n        }\n\n        if (username !== \"\" && password !== \"\") {\n            setAllFieldsCompleted(true)\n        }\n    }\n\n\n    return (\n        <>\n        <Box sx={{width: '100%', height: '100%', backgroundColor: '#000000'}}>\n        <Box\n          component=\"form\"\n          sx={{\n             width: '75%'\n          }}\n          noValidate\n          autoComplete=\"off\"\n        >\n      <TextField alignvalue={username} id=\"username\" label=\"username\" variant=\"outlined\" onChange={e => {handleChange(e)}} />    \n      <TextField value={password} id=\"password\" label=\"password\" variant=\"outlined\" onChange={e => {handleChange(e)}} /> \n      <Button disabled={allFieldsCompleted? false: true} variant=\"contained\">Log In</Button>\n        </Box>\n        </Box>\n        </>\n\n      );\n}\n\nexport default LoginScreen;"],"mappings":";;AAAA;AACA,OAAOA,GAAG,MAAM,mBAAmB;AACnC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB,IAAI;IAACC,kBAAkB;IAAEC;EAAqB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEjE,IAAI;IAAES,QAAQ;IAAEC;EAAY,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE7C,IAAI;IAAEW,QAAQ;IAAEC;EAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMa,YAAY,GAAIC,CAAC,IAAK;IACxB,IAAGA,CAAC,CAACC,MAAM,CAACC,EAAE,KAAK,UAAU,EAAE;MAC3BN,WAAW,CAACI,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;IAC/B;IACA,IAAIH,CAAC,CAACC,MAAM,CAACC,EAAE,KAAK,UAAU,EAAE;MAC5BJ,WAAW,CAACE,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;IAC/B;IAEA,IAAIR,QAAQ,KAAK,EAAE,IAAIE,QAAQ,KAAK,EAAE,EAAE;MACpCH,qBAAqB,CAAC,IAAI,CAAC;IAC/B;EACJ,CAAC;EAGD,oBACIN,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACAhB,OAAA,CAACL,GAAG;MAACsB,EAAE,EAAE;QAACC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEC,eAAe,EAAE;MAAS,CAAE;MAAAJ,QAAA,eACrEhB,OAAA,CAACL,GAAG;QACF0B,SAAS,EAAC,MAAM;QAChBJ,EAAE,EAAE;UACDC,KAAK,EAAE;QACV,CAAE;QACFI,UAAU;QACVC,YAAY,EAAC,KAAK;QAAAP,QAAA,gBAEtBhB,OAAA,CAACJ,SAAS;UAAC4B,UAAU,EAAEjB,QAAS;UAACO,EAAE,EAAC,UAAU;UAACW,KAAK,EAAC,UAAU;UAACC,OAAO,EAAC,UAAU;UAACC,QAAQ,EAAEf,CAAC,IAAI;YAACD,YAAY,CAACC,CAAC,CAAC;UAAA;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvH/B,OAAA,CAACJ,SAAS;UAACmB,KAAK,EAAEN,QAAS;UAACK,EAAE,EAAC,UAAU;UAACW,KAAK,EAAC,UAAU;UAACC,OAAO,EAAC,UAAU;UAACC,QAAQ,EAAEf,CAAC,IAAI;YAACD,YAAY,CAACC,CAAC,CAAC;UAAA;QAAE;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClH/B,OAAA,CAACH,MAAM;UAACmC,QAAQ,EAAE3B,kBAAkB,GAAE,KAAK,GAAE,IAAK;UAACqB,OAAO,EAAC,WAAW;UAAAV,QAAA,EAAC;QAAM;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/E;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACJ,CAAC;AAGX,CAAC;AAAA3B,EAAA,CAzCKD,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA2CjB,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}